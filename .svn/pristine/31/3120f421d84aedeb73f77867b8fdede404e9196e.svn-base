package com.neck_flexed.scripts.hydra;

import com.neck_flexed.scripts.common.*;
import com.runemate.game.api.hybrid.local.hud.interfaces.Inventory;
import lombok.extern.log4j.Log4j2;

import java.util.Map;
import java.util.regex.Pattern;

@Log4j2(topic = "RestockState")
public class RestockState extends com.neck_flexed.scripts.common.RestockState<HydraSettings, HydraState> {

    public RestockState(NeckBot<HydraSettings, HydraState> bot) {
        super(bot, HydraState.TRAVERSING, HydraState.RESTOCKING);
    }

    @Override
    protected Map<Pattern, Integer>[] getWithdraw() {
        return new Map[]{
                NeckBank.getBoostsNeeded(
                        bot.settings().boost().equals(Boost.ImbuedHeart) ? 1 : bot.settings().boostAmount(),
                        false,
                        bot.settings().boost()
                ),
                NeckBank.toMap(bot.settings().antipoisonAmount(),
                        bot.settings().antipoison().pattern()
                ),
                NeckBank.toMap((Inventory.getEmptySlots() < bot.settings().foodAmount() && !Inventory.contains(bot.settings().food().gameName()))
                                ? Inventory.getEmptySlots() : bot.settings().foodAmount(),
                        bot.settings().food().gameName())
        };
    }

    @Override
    protected Pattern[] getExcept() {
        return util.concatenate(
                util.toPatternArray(new String[]{"Dust rune", "Law rune", "Earth rune", "Air rune", "Water rune", "Fire rune", "Nature rune", "Mist rune", "Mud rune", "Smoke rune", "Steam rune", "Lava rune",
                        items.houseTab,
                }),
                new Pattern[]{items.runePouch, items.imbuedHeart, items.constructionCape, items.radasBlessing},
                util.toItemList(bot.settings().equipment()),
                util.toItemList(bot.settings().specEquipment())
        );

    }
}
