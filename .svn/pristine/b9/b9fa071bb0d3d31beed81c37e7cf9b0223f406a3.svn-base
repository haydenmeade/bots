package com.neck_flexed.scripts.turael;

import com.neck_flexed.scripts.common.Boost;
import com.neck_flexed.scripts.common.BreakSettings;
import com.neck_flexed.scripts.common.traverse.HouseSettings;
import com.runemate.game.api.hybrid.EquipmentLoadout;
import com.runemate.game.api.osrs.location.WorldRegion;
import com.runemate.ui.setting.annotation.open.Setting;
import com.runemate.ui.setting.annotation.open.SettingsGroup;
import com.runemate.ui.setting.annotation.open.SettingsSection;
import com.runemate.ui.setting.open.Settings;

@SettingsGroup()
public interface TuraelSettings extends Settings, BreakSettings, HouseSettings {

    @SettingsSection(title = "Breaking", description = "Settings for breaking and stopping", order = 2)
    String breaking = BreakSettings.BREAKING;

    @SettingsSection(title = "Consumeable", description = "Settings for stat boosts", order = 1)
    String Consumeable = "Consumeables";

    @SettingsSection(title = "HOUSE", description = "Settings for house setup", order = 3)
    String House = HouseSettings.HOUSE;

    @Setting(key = "Region", title = "World Region", order = 0)
    default WorldRegion worldRegion() {
        return WorldRegion.AUSTRALIA;
    }

    @Setting(key = "SkipFor", title = "Skip for task, beware of plural (standard java regex, comma separated)", order = 1)
    default String skipFor() {
        return "Hydras,Alchemical Hydra,.*Hydra.*";
    }

    @Setting(key = "Master", title = "Slayer Master", order = 2)
    default SlayerMaster master() {
        return SlayerMaster.KONAR;
    }

    @Setting(key = "Boost", title = "Stat Boost", order = 1, section = Consumeable)
    default Boost boost() {
        return Boost.None;
    }

    @Setting(key = "BoostCount", title = "Stat Boost Amount", order = 2, section = Consumeable)
    default int boostAmount() {
        return 1;
    }

    @Setting(key = "reboost", title = "Reboost if Boost under", order = 3, section = Consumeable)
    default int reboost() {
        return 5;
    }

    @Setting(key = "Equipment", title = "Equipment", converter = EquipmentLoadout.SettingConverter.class, order = 8)
    default EquipmentLoadout equipment() {
        return null;
    }

//    @Setting(key = "dmonster", title = "Debug Monster", order = 99)
//    default Monster debugMonster() {
//        return Monster.Kalphites;
//    }
//
}
