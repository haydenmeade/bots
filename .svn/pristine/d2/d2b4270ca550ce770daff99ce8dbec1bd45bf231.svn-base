package com.neck_flexed.scripts.common.state;

import lombok.extern.log4j.Log4j2;

import java.util.EventListener;

@Log4j2
public abstract class BaseState<T extends Enum> implements LoopState<T> {
    protected final T stateEnum;

    public BaseState(T state) {
        this.stateEnum = state;
    }

    @Override
    public final T get() {
        return stateEnum;
    }

    @Override
    public EventListener[] getEventListeners() {
        return new EventListener[0];
    }

    @Override
    public void deactivate() {
        log.debug("Deactivate {}", this.get());
    }

    @Override
    public void activate() {
        log.debug("Activate {}", this.get());
    }
}
