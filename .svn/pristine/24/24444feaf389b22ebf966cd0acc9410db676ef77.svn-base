package com.neck_flexed.scripts.slayer.turael;

import com.neck_flexed.scripts.common.Boost;
import com.neck_flexed.scripts.common.breaking.BreakSettings;
import com.neck_flexed.scripts.common.traverse.HouseSettings;
import com.runemate.game.api.hybrid.EquipmentLoadout;
import com.runemate.game.api.osrs.location.WorldRegion;
import com.runemate.ui.setting.annotation.open.DependsOn;
import com.runemate.ui.setting.annotation.open.Setting;
import com.runemate.ui.setting.annotation.open.SettingsGroup;
import com.runemate.ui.setting.annotation.open.SettingsSection;
import com.runemate.ui.setting.open.Settings;

@SettingsGroup(group = "turael")
public interface TuraelSettings extends Settings, BreakSettings, HouseSettings {

    @SettingsSection(title = "Breaking", description = "Settings for breaking and stopping", order = 3)
    String breaking = BreakSettings.BREAKING;

    @SettingsSection(title = "Consumeable", description = "Settings for stat boosts", order = 1)
    String Consumeable = "Consumeables";

    @Setting(key = "Region", title = "World Region", order = 0)
    default WorldRegion worldRegion() {
        return WorldRegion.AUSTRALIA;
    }


    @Setting(key = "SkipForStreak", title = "Turael Boost Mode", order = 1)
    default boolean skipForStreak() {
        return false;
    }

    @DependsOn(key = "SkipForStreak", value = "false", group = "turael")
    @Setting(key = "SkipFor", title = "Skip for task, beware of plural (standard java regex, comma separated)", order = 2)
    default String skipFor() {
        return "Hydras,Alchemical Hydra,.*Hydra.*";
    }

    @DependsOn(key = "SkipForStreak", value = "false", group = "turael")
    @Setting(key = "SkipBoss", title = "Stop on any boss task", order = 2)
    default boolean stopOnAnyBoss() {
        return false;
    }

    @DependsOn(key = "SkipForStreak", value = "false", group = "turael")
    @Setting(key = "SkipForTurael", title = "Skip for Turael Task", order = 3)
    default String skipForTurael() {
        return "";
    }

    @DependsOn(key = "SkipForStreak", value = "true", group = "turael")
    @Setting(key = "SkipUntil", title = "Skip until (e.g. 10 for task streak points every 10th)", order = 3, description = "50 = skip until 50 streak")
    default int skipUntil() {
        return 10;
    }


    @Setting(key = "Master", title = "Slayer Master", order = 4)
    default SlayerMaster master() {
        return SlayerMaster.KONAR;
    }

    @Setting(key = "Boost", title = "Stat Boost", order = 1, section = Consumeable)
    default Boost boost() {
        return Boost.None;
    }

    @Setting(key = "BoostCount", title = "Stat Boost Amount", order = 2, section = Consumeable)
    default int boostAmount() {
        return 1;
    }

    @Setting(key = "reboost", title = "Reboost if Boost under", order = 3, section = Consumeable)
    default int reboost() {
        return 5;
    }

    @Setting(key = "Equipment", title = "Equipment", converter = EquipmentLoadout.SettingConverter.class, order = 8)
    default EquipmentLoadout equipment() {
        return null;
    }

    @Setting(key = "slayer_toggle", title = "Slayer Mode", order = 98)
    default boolean slayerMode() {
        return true;
    }

    @Setting(key = "dmonster", title = "Manually Set Monster", order = 99)
    @DependsOn(key = "slayer_toggle", value = "false", group = "turael")
    default TuraelMonster debugMonster() {
        return TuraelMonster.Bears;
    }

}
