package com.neck_flexed.scripts.turael;

import com.runemate.game.api.hybrid.local.hud.interfaces.Inventory;
import lombok.Getter;

import java.util.HashMap;
import java.util.Map;
import java.util.regex.Pattern;

@Getter
public class NeckInventory {
    private final Map<Pattern, Integer> map;

    private NeckInventory(Map<Pattern, Integer> map) {
        this.map = map;
    }

    public static NeckInventory createInventory() {
        var map = new HashMap<Pattern, Integer>();
        var items = Inventory.getItems();
        for (var i : items) {
            var def = i.getDefinition();
            if (def == null) continue;
            var name = def.getName();
            var pattern = Pattern.compile(name, Pattern.CASE_INSENSITIVE | Pattern.LITERAL);
            if (map.containsKey(pattern)) continue;
            var stackable = def.stacks() || def.isNoted();
            var count = stackable ? 0 : Inventory.getQuantity(def.getId());

            map.put(pattern, count);
        }
        return new NeckInventory(map);
    }

    @Override
    public String toString() {
        var b = new StringBuilder();
        b.append("Inventory: ");
        for (var kv : this.map.entrySet()) {
            b.append(kv.getKey().toString());
            b.append(" (");
            b.append(kv.getValue());
            b.append(");;");
        }
        return b.toString();
    }
}
