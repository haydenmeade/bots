package com.neck_flexed.scripts.hydra;

import com.neck_flexed.scripts.common.Loadouts;
import com.neck_flexed.scripts.common.LoopState;
import com.neck_flexed.scripts.common.util;
import com.runemate.game.api.hybrid.local.Camera;
import com.runemate.game.api.hybrid.local.hud.interfaces.Health;
import com.runemate.game.api.hybrid.region.Banks;
import com.runemate.game.api.osrs.local.SpecialAttack;
import com.runemate.game.api.osrs.local.hud.interfaces.Prayer;
import com.runemate.game.api.script.framework.core.EventDispatcher;

public class StartingState implements LoopState<HydraState> {
    private final com.neck_flexed.scripts.hydra.bot bot;
    private final Loadouts loadouts;
    private boolean started = false;

    public StartingState(com.neck_flexed.scripts.hydra.bot m, Loadouts loadouts) {
        this.bot = m;
        this.loadouts = loadouts;
    }

    @Override
    public void activate(EventDispatcher d) {
        bot.updateStatus("Starting");
    }

    @Override
    public HydraState deactivate(EventDispatcher d) {
        if (com.neck_flexed.scripts.hydra.bot.inBossRoom()) {
            return HydraState.FIGHTING;
        }
        if (com.neck_flexed.scripts.hydra.bot.inHydraInstance()) {
            return HydraState.ENTERING_LAIR;
        }
        boolean needsRestock = bot.doWeNeedToRestock();
        if (needsRestock) {
            if (Health.getCurrentPercent() == 100 && Prayer.getPoints() > 20 && SpecialAttack.getEnergy() >= 80 && !Banks.getLoaded().isEmpty())
                return HydraState.RESTOCKING;
            return HydraState.RESTORING;
        }
        return HydraState.TRAVERSING;
    }

    @Override
    public HydraState get() {
        return HydraState.STARTING;
    }

    @Override
    public String fatalError() {
        return null;
    }

    @Override
    public boolean done() {
        return started;
    }

    @Override
    public void executeLoop() {
        Camera.setZoom(0.1, 0.1);
        if (util.isAutoRetaliateEnabled())
            util.toggleAutoRetaliate();
        started = true;
    }
}
