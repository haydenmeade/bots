package com.neck_flexed.scripts.common;

import com.runemate.game.api.client.ClientUI;
import com.runemate.game.api.hybrid.input.direct.MenuAction;
import com.runemate.game.api.hybrid.local.House;
import com.runemate.game.api.hybrid.local.hud.interfaces.Health;
import com.runemate.game.api.hybrid.local.hud.interfaces.InterfaceContainers;
import com.runemate.game.api.hybrid.location.navigation.Traversal;
import com.runemate.game.api.hybrid.region.Players;
import com.runemate.game.api.osrs.local.SpecialAttack;
import com.runemate.game.api.osrs.local.hud.interfaces.Prayer;
import com.runemate.game.api.script.Execution;
import lombok.extern.log4j.Log4j2;

@Log4j2(topic = "HouseUtil")
public class HouseUtil {
    public static final String FaladorPark = "Falador Park";

    public static boolean JbToCastleWars() {
        if (Players.getLocal() == null) return false;
        if (util.castleWars.contains(Players.getLocal())) return true;
        if (!Execution.delayUntil(() -> util.getJewelleryBox() != null, 5000)) {
            return false;
        }
        var jb = util.getJewelleryBox();
        if (jb == null) return false;

        if (!jb.getActiveDefinition().getActions().contains("Castle Wars")) {
            if (InterfaceContainers.getAt(util.jb_interface_id) == null) {
                jb.interact("Teleport Menu");
            }
            if (Execution.delayUntil(() -> InterfaceContainers.getAt(util.jb_interface_id) != null, 1400, 2600)) {
                var ic = InterfaceContainers.getAt(util.jb_interface_id);
                if (ic == null || ic.getComponent(2) == null || ic.getComponent(2).getChild(6) == null) {
                    return false;
                }
                if (ic.getComponent(2).getChild(6).interact("Castle Wars")) {

                    Execution.delayUntil(() -> !House.isInside(), 10000);
                    Execution.delay(1200);
                }
            } else {
                return false;
            }
        } else if (!util.castleWars.contains(Players.getLocal())) {
            if (jb.interact("Castle Wars")) {
                Execution.delayUntil(() -> !House.isInside(), 5000, 5100);
                Execution.delay(1200);
            }
        }
        var res = Execution.delayUntil(() -> util.castleWars.contains(Players.getLocal()), 2000, 3000);
        Execution.delay(600, 700);
        return res;
    }

    public static boolean JbToFallyPark(NeckBot bot) {
        if (Players.getLocal() == null) return false;
        if (!House.isInside()) return true;
        if (!Execution.delayUntil(() -> util.getJewelleryBox() != null, 5000)) {
            return false;
        }
        if (util.getJewelleryBox() != null && util.getOrnateJewelleryBox() == null) {
            ClientUI.showAlert(ClientUI.AlertLevel.ERROR,
                    "The House Bank and Restore strategy requires an ornate jewellery box for Falador park teleport");
            bot.pause();
            return false;
        }
        var jb = util.getOrnateJewelleryBox();
        if (jb == null) return false;
        var ad = jb.getActiveDefinition();
        if (ad == null) return false;
        if (!ad.getActions().contains(FaladorPark)) {
            if (InterfaceContainers.getAt(util.jb_interface_id) == null) {
                jb.interact("Teleport Menu");
                Execution.delay(1600, 3600);
            }
            if (Execution.delayUntil(() -> InterfaceContainers.getAt(util.jb_interface_id) != null, 10000)) {
                var container = InterfaceContainers.getAt(util.jb_interface_id);
                if (container == null) return false;
                var component = container.getComponent(6);
                if (component == null) return false;
                var child = component.getChild(7);
                if (child == null) return false;
                child.interact(FaladorPark);
                Execution.delayUntil(() -> !House.isInside(), 10000);
                Execution.delay(600);
            } else {
                return false;
            }
        } else if (House.isInside()) {
            jb.interact(FaladorPark);
            Execution.delayUntil(() -> !House.isInside(), 10000);
            Execution.delay(600);
        }
        return !House.isInside();
    }

    public static boolean restoreStatsInHouse(NeckBot bot) {
        if (bot.prayerFlicker != null) {
            bot.prayerFlicker.disable();
        }
        var d = bot.getEventDispatcher();
        if (Health.getCurrentPercent() == 100
                && Prayer.getMaximumPoints() - Prayer.getPoints() <= 0
                && SpecialAttack.getEnergy() == 100
                && Traversal.getRunEnergy() > 90) {
            return true;
        }
        log.debug("restoring stats in house");
        if (!Execution.delayUntil(House::isInside, 5000)) {
            log.error("not in house");
            return false;
        }
        if (!Execution.delayUntil(() -> !util.getPools().isEmpty(), 5000)) {
            log.error("unable to get pool");
            return false;
        }
        var pool = util.getPools().nearest();
        if (pool == null) {
            log.error("unable to get pool2");
            return false;
        }
        var l = new RestoreListener(d);
        try {
            if (!pool.interact("Drink"))
                bot.di.send(MenuAction.forGameObject(pool, "Drink"));
            if (!Execution.delayUntil(l::hasRestored, 2200, 2400)) {
                log.error("unable to restore");
                return false;
            }
        } finally {
            l.stop();
        }
        if (Health.getCurrentPercent() == 100
                && Prayer.getMaximumPoints() - Prayer.getPoints() <= 0
                && SpecialAttack.getEnergy() == 100
                && Traversal.getRunEnergy() > 90) {
            Execution.delay(100, 300);
            return true;
        }
        return false;
    }

}
