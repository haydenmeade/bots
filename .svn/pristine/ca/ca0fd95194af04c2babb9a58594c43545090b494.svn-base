package com.neck_flexed.scripts.sire;

import com.neck_flexed.scripts.common.util;
import com.runemate.game.api.hybrid.input.direct.DirectInput;
import com.runemate.game.api.hybrid.local.House;
import com.runemate.game.api.hybrid.local.hud.interfaces.Inventory;
import com.runemate.game.api.hybrid.location.Area;
import com.runemate.game.api.hybrid.location.Coordinate;
import com.runemate.game.api.hybrid.region.GameObjects;
import com.runemate.game.api.hybrid.region.Players;
import com.runemate.game.api.script.Execution;
import com.runemate.game.api.script.framework.tree.LeafTask;
import lombok.extern.log4j.Log4j2;

@Log4j2(topic = "TraverseTask")
public class TraverseTask extends LeafTask {

    private static final Area offerArea = Area.rectangular(new Coordinate(3027, 4786, 0), new Coordinate(3052, 4754, 0));
    private static final String unsiredStr = "Unsired";

    @Override
    public void execute() {
        SireState.setActivePrayers();
        var p = Players.getLocal();
        if (p == null) return;
        if (offerArea.contains(p) && Inventory.contains(unsiredStr)) {
            sire.updateStatus(String.format("Font of Consumption Baybe"));
            var unsired = Inventory.getItems(unsiredStr).first();
            var font = GameObjects.getLoaded("The Font of Consumption").first();
            if (unsired == null || font == null) return;
            DirectInput.sendItemUseOn(unsired, font);
            Execution.delayUntil(() -> !Inventory.contains(unsiredStr), 2000);
        } else if (sire.abyssalNexus.contains(p)) {
            log.debug("traversing in nexus");
            sire.updateStatus(String.format("Traversing in nexus"));
            Traverse.traverseToSire();
        } else if (House.isInside()) {
            log.debug("traversing in house");
            sire.updateStatus(String.format("Traversing in house"));
            Execution.delay(600, 1200);
            Traverse.fairyRingBack();
            //} else if (sire.castleWars.contains(p)) {
        } else if (!sire.abyssalNexus.isLoaded()) {
            log.debug("traversing");
            sire.updateStatus(String.format("Traversing"));
            util.teleToHouse();
        }
    }

}
