package com.neck_flexed.scripts.hydra;

import com.neck_flexed.scripts.common.*;
import com.runemate.game.api.hybrid.entities.GameObject;
import com.runemate.game.api.hybrid.input.direct.DirectInput;
import com.runemate.game.api.hybrid.input.direct.MenuAction;
import com.runemate.game.api.hybrid.local.House;
import com.runemate.game.api.hybrid.local.Skill;
import com.runemate.game.api.hybrid.local.hud.interfaces.ChatDialog;
import com.runemate.game.api.hybrid.local.hud.interfaces.FairyRing;
import com.runemate.game.api.hybrid.location.Coordinate;
import com.runemate.game.api.hybrid.location.navigation.Path;
import com.runemate.game.api.hybrid.region.GameObjects;
import com.runemate.game.api.hybrid.region.Players;
import com.runemate.game.api.hybrid.region.Region;
import com.runemate.game.api.hybrid.web.WebPath;
import com.runemate.game.api.osrs.local.AchievementDiary;
import com.runemate.game.api.script.Execution;
import com.runemate.game.api.script.framework.core.EventDispatcher;
import lombok.extern.log4j.Log4j2;

@Log4j2(topic = "TraverseState")
public class TraverseState implements LoopState<HydraState> {
    // TODO
    private final com.neck_flexed.scripts.hydra.bot bot;
    private final Loadouts loadouts;
    private final PrayerFlicker prayerFlicker;
    private String error;
    private Path path1;
    private Path path2;
    private boolean haveDoneHouseTele;

    public TraverseState(com.neck_flexed.scripts.hydra.bot bot, Loadouts loadouts, PrayerFlicker prayerFlicker) {
        this.bot = bot;
        this.loadouts = loadouts;
        this.prayerFlicker = prayerFlicker;
    }

    private static GameObject getDungeonEntrance() {
        return GameObjects.newQuery()
                .on(new Coordinate(1311, 3807, 0))
                .names("Elevator")
                .actions("Activate")
                .results().first();
    }

    private static GameObject getShortcut() {
        return GameObjects.newQuery()
                .on(new Coordinate(1316, 10214, 0))
                .names("Mysterious pipe")
                .actions("Enter")
                .results().first();
    }

    private static boolean canShortcut() {
        return Skill.AGILITY.getCurrentLevel() >= 88 && AchievementDiary.KOUREND_AND_KEBOS.isEliteComplete();
    }

    private static GameObject getRocks() {
        return GameObjects.newQuery()
                .on(new Coordinate(1351, 10251, 0))
                .names("Rocks")
                .actions("Climb")
                .results().first();
    }

    private static GameObject getRocksFirst() {
        return GameObjects.newQuery()
                .on(new Coordinate(1311, 10215, 0))
                .names("Rocks")
                .actions("Climb")
                .results().first();
    }


    @Override
    public void activate(EventDispatcher d) {
        bot.updateStatus("Traversing");
    }

    @Override
    public HydraState deactivate(EventDispatcher d) {
        if (com.neck_flexed.scripts.hydra.bot.inBossRoom())
            return HydraState.FIGHTING;
        if (com.neck_flexed.scripts.hydra.bot.inEntranceArea())
            return HydraState.ENTERING_LAIR;
        return HydraState.STARTING;
    }

    @Override
    public HydraState get() {
        return HydraState.TRAVERSING;
    }

    @Override
    public String fatalError() {
        return error;
    }

    @Override
    public boolean done() {
        return com.neck_flexed.scripts.hydra.bot.inBossRoom() || com.neck_flexed.scripts.hydra.bot.inEntranceArea();
    }

    @Override
    public void executeLoop() {
        var p = Players.getLocal();
        if (p == null) return;
        var pos = p.getServerPosition();
        if (pos == null) return;
        if (com.neck_flexed.scripts.hydra.bot.isInKaralumDungeon()) {
            var r = getRocks();
            var rFirst = getRocksFirst();
            var s = getShortcut();
            if (r != null && pos.distanceTo(r) < 30) {
                log.debug("Rocks");
                DirectInput.send(MenuAction.forGameObject(r, "Climb"));
                Execution.delay(600, 700);
                Execution.delayUntil(Region::isInstanced, 4000, 5000);
            } else if (canShortcut() && s != null) {
                log.debug("Shortcut");
                DirectInput.send(MenuAction.forGameObject(s, "Enter"));
                Execution.delay(600, 700);
                Execution.delayUntil(() -> getRocks() != null && ChatDialog.getContinue() != null, 10000, 15000);
            } else if (rFirst != null && pos.getY() < 10215) {
                log.debug("RocksFirst");
                DirectInput.send(MenuAction.forGameObject(rFirst, "Climb"));
                Execution.delayUntil(() -> Players.getLocal().getPosition().getY() > 10215, () -> Players.getLocal().getAnimationId() != -1, 2000, 3000);
                Execution.delay(600, 700);
            } else {
                log.debug("Path to hydra in dungeon");
                if (this.path1 == null)
                    path1 = WebPath.buildTo(new Coordinate(1351, 10248, 0));
                if (path1 != null) {
                    if (!path1.step())
                        path1 = null;
                } else {
                    log.error("Could not generate path in karalum dungeon");
                }
            }
        } else if (getDungeonEntrance() != null) {
            var de = getDungeonEntrance();
            if (de == null) return;
            log.debug("Elevator");
            DirectInput.send(MenuAction.forGameObject(de, "Activate"));
            Execution.delayUntil(com.neck_flexed.scripts.hydra.bot::isInKaralumDungeon, 4000, 5000);
            Execution.delayUntil(() -> Players.getLocal() != null, 4000, 5000);
        } else if (bot.settings().traverseStrategy().equals(TraverseStrategy.HouseFairyRing)
                && House.isInside()) {
            HouseUtil.FairyRingTo(util.getFairyRing(), FairyRing.CIR);
        } else if (bot.settings().traverseStrategy().equals(TraverseStrategy.HouseFairyRing)
                && !House.isInside()
                && !haveDoneHouseTele) {
            util.teleToHouse();
            haveDoneHouseTele = true;
        } else {
            log.debug("pathing to dungeon");
            if (this.path2 == null)
                path2 = WebPath.buildTo(new Coordinate(1311, 3807, 0));
            if (path2 != null) {
                if (!path2.step())
                    path2 = null;
            } else {
                log.error("Could not generate path to mount karlemum");
            }

        }


    }

}
