package com.neck_flexed.scripts.common;

import com.runemate.game.api.hybrid.input.direct.DirectInput;
import com.runemate.game.api.hybrid.input.direct.MenuAction;
import com.runemate.game.api.hybrid.input.direct.MenuOpcode;
import com.runemate.game.api.osrs.local.hud.interfaces.Prayer;
import com.runemate.game.api.script.framework.listeners.EngineListener;
import lombok.extern.log4j.Log4j2;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.stream.Collectors;

@Log4j2(topic = "PrayerFlicker")
public class PrayerFlicker implements EngineListener {
    private List<Prayer> activePrayers = new ArrayList<Prayer>();

    public PrayerFlicker() {
    }

    public List<Prayer> getActivePrayers() {
        return activePrayers;
    }

    public void setActivePrayers(Prayer... _activePrayers) {
        activePrayers = Arrays.stream(_activePrayers).collect(Collectors.toList());
    }

    @Override
    public void onTickStart() {
        try {
            // turn off
            for (Prayer p :
                    Prayer.getActivePrayers()) {
                DirectInput.send(MenuAction.forInterfaceComponent(p.getComponent(), 0, MenuOpcode.CC_OP));
            }
            // flick
            for (Prayer p : getActivePrayers()) {
                DirectInput.send(MenuAction.forInterfaceComponent(p.getComponent(), 0, MenuOpcode.CC_OP));
            }
        } catch (Exception e) {
            log.error("Prayer flicker", e);
        }


    }

}
