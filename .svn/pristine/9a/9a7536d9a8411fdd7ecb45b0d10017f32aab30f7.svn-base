package com.neck_flexed.scripts.sarachnis;

import com.neck_flexed.scripts.common.BreakManager;
import com.neck_flexed.scripts.common.HouseUtil;
import com.neck_flexed.scripts.common.LoopState;
import com.neck_flexed.scripts.common.util;
import com.runemate.game.api.hybrid.local.House;
import com.runemate.game.api.hybrid.location.navigation.Traversal;
import com.runemate.game.api.hybrid.region.Players;
import com.runemate.game.api.script.framework.core.EventDispatcher;
import lombok.extern.log4j.Log4j2;

@Log4j2(topic = "RestoreState")
public class RestoreState implements LoopState<SarachnisState> {
    private final com.neck_flexed.scripts.sarachnis.bot bot;
    private final BreakManager breakManager;
    private String error;
    private boolean done;
    private EventDispatcher dispatcher;

    public RestoreState(com.neck_flexed.scripts.sarachnis.bot bot
            , BreakManager breakManager) {
        this.bot = bot;
        this.breakManager = breakManager;
    }

    @Override
    public void activate(EventDispatcher d) {
        this.dispatcher = d;
        bot.updateStatus(String.format("Restoring"));
        bot.resetKill();
    }

    @Override
    public SarachnisState deactivate(EventDispatcher d) {
        if (this.breakManager.breaking() || this.breakManager.stopBot())
            return SarachnisState.BREAKING;
        return SarachnisState.RESTOCKING;
    }

    @Override
    public SarachnisState get() {
        return SarachnisState.RESTORING;
    }

    @Override
    public String fatalError() {
        return this.error;
    }

    @Override
    public boolean done() {
        return done;
    }

    @Override
    public void executeLoop() {
        if (bot.settings().RestoreAndBankStrategy() == RestoreAndBankStrategy.House) {
            if (!House.isInside()) {
                util.teleToHouse();
                return;
            }

            if (!HouseUtil.restoreStatsInHouse(dispatcher)) {
                return;
            }

            if (!Traversal.isRunEnabled())
                Traversal.toggleRun();

            this.done = HouseUtil.JbToCastleWars();
        } else {
            if (!util.ferox.contains(Players.getLocal()) && !util.ringOfDuelingToEnclave()) {
                log.error("Unable to tele to ferox");
                return;
            } else if (!util.restoreAtFerox(dispatcher)) {
                return;
            }
            this.done = true;
        }

    }
}
