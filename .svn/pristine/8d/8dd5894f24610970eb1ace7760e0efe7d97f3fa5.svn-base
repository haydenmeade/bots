package com.neck_flexed.scripts.common;

import com.runemate.game.api.hybrid.local.hud.interfaces.Inventory;
import com.runemate.game.api.osrs.local.hud.interfaces.Magic;
import com.runemate.game.api.script.framework.listeners.EngineListener;
import lombok.extern.log4j.Log4j2;

import java.util.regex.Pattern;

@Log4j2(topic = "Alcher")
public class AlchListener implements EngineListener {

    private final NeckBot<?, ?> bot;
    private Pattern[] alchables;
    private int cooldown = 0;

    public AlchListener(NeckBot<?, ?> bot) {
        this.bot = bot;
        this.alchables = new Pattern[0];
    }

    public AlchListener(NeckBot<?, ?> bot, String... alchList) {
        this.bot = bot;
        this.alchables = util.toPatternArray(alchList);
    }

    public AlchListener(NeckBot<?, ?> bot, Pattern... alchList) {
        this.bot = bot;
        this.alchables = alchList;
    }

    public void setAlchables(String... alchList) {
        this.alchables = util.toPatternArray(alchList);
    }

    public void setAlchables(Pattern... alchList) {
        this.alchables = alchList;
    }

    @Override
    public void onTickStart() {
        if (this.cooldown > 0) {
            cooldown -= 1;
            return;
        }

        if (!util.canAlch()) return;
        try {
            var item = Inventory.getItems(alchables).first();
            if (item != null) {
                log.debug(String.format("alching: %s", item));
                if (bot.di.sendSpellCastOn(Magic.HIGH_LEVEL_ALCHEMY, item))
                    cooldown += 5;
                Action.set(Action.Alch);
            }
        } catch (Exception e) {
            log.error("Alch", e);
        }
    }
}
