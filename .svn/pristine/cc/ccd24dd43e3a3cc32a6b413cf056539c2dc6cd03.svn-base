package com.neck_flexed.scripts.barrage;

import com.runemate.game.api.hybrid.local.Rune;
import com.runemate.game.api.osrs.local.hud.interfaces.Magic;
import lombok.Getter;
import lombok.RequiredArgsConstructor;

import java.util.function.BooleanSupplier;

@RequiredArgsConstructor
public enum NeckSpell {

    IceBarrage(Magic.Ancient.ICE_BARRAGE,
            () -> Rune.DEATH.getQuantity() >= 4 && Rune.BLOOD.getQuantity() >= 2 && Rune.WATER.getQuantity() >= 6
    ),
    IceBurst(Magic.Ancient.ICE_BURST,
            () -> Rune.DEATH.getQuantity() >= 2 && Rune.CHAOS.getQuantity() >= 4 && Rune.WATER.getQuantity() >= 4
    ),
    ShadowBarrage(Magic.Ancient.SHADOW_BARRAGE,
            () -> Rune.AIR.getQuantity() >= 4 && Rune.BLOOD.getQuantity() >= 2 && Rune.DEATH.getQuantity() >= 4 && Rune.SOUL.getQuantity() >= 3
    ),
    ShadowBurst(Magic.Ancient.SHADOW_BURST,
            () -> Rune.AIR.getQuantity() >= 1 && Rune.CHAOS.getQuantity() >= 4 && Rune.DEATH.getQuantity() >= 2 && Rune.SOUL.getQuantity() >= 2
    ),
    ;

    @Getter
    private final Magic.Ancient spell;
    private final BooleanSupplier hasRunes;

    public boolean canCast() {
        return hasRunes.getAsBoolean();
    }

    @Override
    public String toString() {
        return spell.name();
    }
}
