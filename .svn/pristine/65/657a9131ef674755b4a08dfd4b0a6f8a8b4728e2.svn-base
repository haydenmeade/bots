package com.neck_flexed.scripts.common;

import com.runemate.game.api.hybrid.entities.GameObject;
import com.runemate.game.api.hybrid.input.direct.DirectInput;
import com.runemate.game.api.hybrid.input.direct.MenuAction;
import com.runemate.game.api.hybrid.local.House;
import com.runemate.game.api.hybrid.local.hud.interfaces.Equipment;
import com.runemate.game.api.hybrid.local.hud.interfaces.FairyRing;
import com.runemate.game.api.hybrid.local.hud.interfaces.InterfaceContainers;
import com.runemate.game.api.hybrid.region.Players;
import com.runemate.game.api.osrs.local.AchievementDiary;
import com.runemate.game.api.script.Execution;
import lombok.extern.log4j.Log4j2;

import java.util.concurrent.Callable;
import java.util.regex.Pattern;

@Log4j2(topic = "HouseUtil")
public class HouseUtil {
    public static final String FaladorPark = "Falador Park";

    public static boolean JbToCastleWars() {
        if (!Execution.delayUntil(() -> !util.getJewelleryBox().isEmpty(), 5000)) {
            return false;
        }
        var jb = util.getJewelleryBox().nearest();
        if (!jb.getActiveDefinition().getActions().contains("Castle Wars")) {
            if (InterfaceContainers.getAt(util.jb_interface_id) == null) {
                jb.interact("Teleport Menu");
            }
            if (Execution.delayUntil(() -> InterfaceContainers.getAt(util.jb_interface_id) != null, 1400, 2600)) {
                if (InterfaceContainers.getAt(util.jb_interface_id).getComponent(2).getChild(6).interact("Castle Wars")) {

                    Execution.delayUntil(() -> !House.isInside(), 10000);
                    Execution.delay(600);
                }
            } else {
                return false;
            }
        } else if (!util.castleWars.contains(Players.getLocal())) {
            if (jb.interact("Castle Wars")) {
                Execution.delayUntil(() -> !House.isInside(), 1400, 2600);
                Execution.delay(600);
            }
        }
        return true;
    }

    public static boolean FairyRingTo(GameObject fairyRing, FairyRing destination) {
        if (fairyRing == null) {
            log.debug("null fairy ring");
        }
        if (!AchievementDiary.LUMBRIDGE.isEliteComplete()) {
            if (Equipment.getItems(items.dramenStaff, items.lunarStaff).isEmpty()) {
                util.equipDramen();
                if (!Execution.delayUntil(() -> Equipment.getItems(items.dramenStaff, items.lunarStaff).isEmpty(), 1200))
                    return false;
            }
        }
        var cp = Players.getLocal().getPosition() == null ? 0 : Players.getLocal().getPosition().getContainingRegionId();
        Callable<Boolean> check = () -> cp != Players.getLocal().getPosition().getContainingRegionId();

        if (destination.isPreviousDestination()) {
            log.debug("fairy ring to last destination");
            var patternLastDest = Pattern.compile(".*ast-destination \\(" + destination.name() + "\\)");
            DirectInput.send(MenuAction.forGameObject(fairyRing, patternLastDest));
            return Execution.delayUntil(check, 3500, 4500);
        } else if (FairyRing.isConfigurationOpen() && destination.select()) {
            return Execution.delayUntil(check, 3500, 4500);
        } else {
            log.debug("fairy ring configure");
            if (fairyRing.getActiveDefinition().getActions().contains("Configure"))
                DirectInput.send(MenuAction.forGameObject(fairyRing, "Configure"));
            else
                DirectInput.send(MenuAction.forGameObject(fairyRing, "Ring-configure"));
            Execution.delayUntil(() -> FairyRing.isConfigurationOpen(), 2000, 3000);
        }
        return false;
    }

    public static boolean JbToFallyPark() {
        if (!Execution.delayUntil(() -> !util.getJewelleryBox().isEmpty(), 5000)) {
            return false;
        }
        var jb = util.getJewelleryBox().nearest();
        if (!jb.getActiveDefinition().getActions().contains(FaladorPark)) {
            if (InterfaceContainers.getAt(util.jb_interface_id) == null) {
                jb.interact("Teleport Menu");
                Execution.delay(1600, 3600);
            }
            if (Execution.delayUntil(() -> InterfaceContainers.getAt(util.jb_interface_id) != null, 10000)) {
                InterfaceContainers.getAt(util.jb_interface_id).getComponent(6).getChild(7).interact(FaladorPark);
                Execution.delayUntil(() -> !House.isInside(), 10000);
                Execution.delay(600);
            } else {
                return false;
            }
        } else if (House.isInside()) {
            jb.interact(FaladorPark);
            Execution.delayUntil(() -> !House.isInside(), 10000);
            Execution.delay(600);
        }
        return true;
    }
}
