package com.neck_flexed.scripts.lizard;


import com.runemate.game.api.hybrid.entities.GroundItem;
import com.runemate.game.api.hybrid.input.direct.DirectInput;
import com.runemate.game.api.hybrid.input.direct.MenuAction;
import com.runemate.game.api.hybrid.local.hud.interfaces.Inventory;
import com.runemate.game.api.hybrid.region.GroundItems;
import com.runemate.game.api.script.framework.listeners.EngineListener;
import com.runemate.game.api.script.framework.listeners.GroundItemListener;
import lombok.extern.log4j.Log4j2;
import org.jetbrains.annotations.Nullable;

import java.util.Arrays;
import java.util.List;

@Log4j2(topic = "Looter")
public class Looter implements EngineListener, GroundItemListener {

    public static List<String> loot = Arrays.asList(
            "Dragon warhammer",
            "Rune med helm",
            "Earth battlestaff",
            "Mystic earth staff",
            "Rune warhammer",
            "Rune chainbody",
            "Red d'hide vambraces",
            "Rune 2h sword",
            "Rune battleaxe",
            "Rune sq shield",
            "Rune kiteshield",
            "Dragon med helm",
            "Rune spear",
            "Chaos rune",
            "Death rune",
            "Fire rune",
            "Coal",
            "Iron ore",
            "Runite ore",
            "Grimy kwuarm",
            "Grimy cadantine",
            "Grimy dwarf weed",
            "Grimy lantadyme",
            "Ranarr seed",
            "Snapdragon seed",
            "Torstol seed",
            "Lizardman fang",
            "Xeric's talisman (inert)",
            "Loop half of key",
            "Tooth half of key",
            "Runite bar",
            "Nature rune",
            "Law rune",
            "Rune arrow",
            "Dragonstone",
            "Silver ore",
            "Shield left half",
            "Dragon spear",
            "Long bone",
            "Brimstone key",
            "Clue scroll (hard)",
            "Clue scroll (elite)",
            "Clue scroll (elite)",
            "Yew seed",
            "Magic seed",
            "Palm tree seed",
            "Papaya tree seed",
            "Mahogany seed",
            "Spirit seed",
            "Dragonfruit tree seed",
            "Celastrus seed",
            "Redwood tree seed",
            "Chilli potato",
            "Coins");

    private void take(GroundItem gi) {
        if (BotState.getBotState() != BotState.FIGHTING) {
            return;
        }

        if (Inventory.isFull()) {
            if (!Consumeables.restoreHitpoints()) {
                if (gi.getDefinition().getName() == "Dragon warhammer") {
                    //TODO
                }
                BotState.setBotState(BotState.RESTORING);
                return;
            }
        }
        log.debug(gi.getPosition());
        if (lizard.areaCentre.contains(gi.getPosition())) {
            log.debug(String.format("looting: %s", gi.getDefinition().getName()));
            DirectInput.send(MenuAction.forGroundItem(gi, "Take"));
            BotState.setLastAction(Action.Loot);
            BotState.setBotState(BotState.LOOTING);
        } else {
            log.debug("not reachable");
        }
    }

    private @Nullable GroundItem getGroundItemToLoot() {
        var gi = GroundItems.getLoaded(groundItem ->
                lizard.areaCentre.contains(groundItem.getPosition()) && loot.contains(groundItem.getDefinition().getName()));
        return gi.isEmpty() ? null : gi.first();
    }


    @Override
    public void onTickStart() {
        try {
            var gi = getGroundItemToLoot();
            if (gi != null)
                take(gi);
            else if (BotState.getBotState() == BotState.LOOTING) {
                BotState.setBotState(BotState.FIGHTING);
                Movement.MoveToBestSafeTile();
            }
        } catch (Exception e) {
            log.error(e);
            e.printStackTrace();
        }

    }
}

